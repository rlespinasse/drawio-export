name: Build And Release

on:
  pull_request:
  push:
    branches:
      - v4.x
jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-${{ github.ref }}-${{ github.event_name }}
      cancel-in-progress: true
    steps:
      # Setup
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
      - uses: rlespinasse/github-slug-action@v4
      - name: Build docker image
        run: make build
        shell: bash
        env:
          DOCKER_IMAGE: ${{ github.repository }}:${{ env.GITHUB_REF_SLUG }}
      - name: Setup CI for test
        run: make test-ci-setup
        shell: bash
      - name: Test docker image
        run: make test-ci
        shell: bash
        env:
          DOCKER_IMAGE: ${{ github.repository }}:${{ env.GITHUB_REF_SLUG }}
      - name: Test docker image // Store output logs
        uses: actions/upload-artifact@v4
        with:
          name: test-docker-image-logs
          path: "tests/output/*.log"
        if: ${{ always() }}
      - name: Test docker image // Store output files
        uses: actions/upload-artifact@v4
        with:
          name: test-docker-image-files
          path: |
            tests/data
            !tests/data/*.drawio
            !tests/data/*/*.drawio
        if: ${{ always() }}

  build-multiarch:
    runs-on: ubuntu-latest
    concurrency:
      group: build-multiarch-${{ github.ref }}-${{ github.event_name }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: rlespinasse/github-slug-action@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,arm"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image
        run: make build-multiarch
        shell: bash
        env:
          DOCKER_IMAGE: ${{ github.repository }}:${{ env.GITHUB_REF_SLUG }}

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-multiarch
    concurrency:
      group: release-${{ github.ref }}-${{ github.event_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Release this docker image
        uses: rlespinasse/release-that@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
